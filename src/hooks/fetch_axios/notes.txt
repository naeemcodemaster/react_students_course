
Fetch vs Axios

first
Fetch API:
Native to JavaScript and is built into most modern browsers.
Returns a Promise that resolves to the Response object representing the response to the request.
Example
fetch('https://api.example.com/data',{

})
  .then(response => response.json())
  .then(data => console.log(data))
  .catch(error => console.error('Error:', error));

=================================
// Create a new item
const [itemData,setItemData] = useState({
    name:"khan",
    age:22,
    email:"khan@gmail.com"
})

<button onclick(()=>createItem(itemData))>Save</button>
const createItem = async (itemData) => {
    try {
        const response = await fetch('https://example.com/api/items', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(itemData),
        });
        const data = await response.json();
        console.log('Item created:', data);
    } catch (error) {
        console.error('Error creating item:', error);
    }
};

// Example usage
createItem({ name: 'New Item', price: 20 });

// Read or fetch all items
const fetchItems = async () => {
    try {
        const response = await fetch('https://example.com/api/items', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
            },
        });
        const data = await response.json();
        console.log('Items fetched:', data);
    } catch (error) {
        console.error('Error fetching items:', error);
    }
};

// Example usage
fetchItems();

// Update an item
const updateItem = async (itemId, updatedData) => {
    try {
        const response = await fetch(`https://example.com/api/items/${itemId}`, {
            method: 'PUT', // or 'PATCH'
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(updatedData),
        });
        const data = await response.json();
        console.log('Item updated:', data);
    } catch (error) {
        console.error('Error updating item:', error);
    }
};

// Example usage
updateItem(1, { name: 'Updated Item', price: 25 });


// Delete an item
const deleteItem = async (itemId) => {
    try {
        const response = await fetch(`https://example.com/api/items/${itemId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
                'Authorization':`Bearer ${JWT}`
            },
        });
        if (response.ok) {
            console.log('Item deleted');
        } else {
            console.error('Error deleting item');
        }
    } catch (error) {
        console.error('Error deleting item:', error);
    }
};

// Example usage
deleteItem(1);


==================================



Axios:
A third-party library that needs to be installed via npm (npm install axios).
Provides a clean, concise syntax and more advanced features.
Example
import axios from 'axios';
axios.get('https://api.example.com/data')
  .then(response => console.log(response.data))
  .catch(error => console.error('Error:', error));

import axios from 'axios';

// Create a new item
const createItem = async (itemData) => {
    try {
        const response = await axios.post('https://example.com/api/items', itemData, {
            headers: {
                'Content-Type': 'application/json',
            },
        });
        console.log('Item created:', response.data);
    } catch (error) {
        console.error('Error creating item:', error);
    }
};

// Example usage
createItem({ name: 'New Item', price: 20 });


import axios from 'axios';

// Read or fetch all items
const fetchItems = async () => {
    try {
        const response = await axios.get('https://example.com/api/items', {
            headers: {
                'Content-Type': 'application/json',
            },
        });
        console.log('Items fetched:', response.data);
    } catch (error) {
        console.error('Error fetching items:', error);
    }
};

// Example usage
fetchItems();

import axios from 'axios';

// Update an item
const updateItem = async (itemId, updatedData) => {
    try {
        const response = await axios.put(`https://example.com/api/items/${itemId}`, updatedData, {
            headers: {
                'Content-Type': 'application/json',
            },
        });
        console.log('Item updated:', response.data);
    } catch (error) {
        console.error('Error updating item:', error);
    }
};

// Example usage
updateItem(1, { name: 'Updated Item', price: 25 });


import axios from 'axios';

// Delete an item
const deleteItem = async (itemId) => {
    try {
        const response = await axios.delete(`https://example.com/api/items/${itemId}`, {
            headers: {
                'Content-Type': 'application/json',
            },
        });
        if (response.status === 200) {
            console.log('Item deleted');
        }
    } catch (error) {
        console.error('Error deleting item:', error);
    }
};

// Example usage
deleteItem(1);
